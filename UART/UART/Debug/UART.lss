
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  00000774  000007e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000774  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000818  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000874  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000008b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a3d  00000000  00000000  000008ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008b7  00000000  00000000  00001329  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000333  00000000  00000000  00001be0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000074  00000000  00000000  00001f14  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e4  00000000  00000000  00001f88  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000160  00000000  00000000  0000236c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  000024cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 e7       	ldi	r30, 0x74	; 116
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 33       	cpi	r26, 0x30	; 48
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e3       	ldi	r26, 0x30	; 48
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 33       	cpi	r26, 0x30	; 48
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	22 d0       	rcall	.+68     	; 0x108 <main>
  c4:	55 c3       	rjmp	.+1706   	; 0x770 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <putch>:

// 7-Segment에 표시할 글자의 입력 데이터를 저장

void putch(unsigned char data){
	
	while((UCSR0A & 0x20) == 0 ); // 전송 준비가 될 때까지 대기
  c8:	5d 9b       	sbis	0x0b, 5	; 11
  ca:	fe cf       	rjmp	.-4      	; 0xc8 <putch>
	UDR0 = data;				  // 데이터를 UDR0에 쓰면 전송
  cc:	8c b9       	out	0x0c, r24	; 12
	UCSR0A |= 0x20;
  ce:	8b b1       	in	r24, 0x0b	; 11
  d0:	80 62       	ori	r24, 0x20	; 32
  d2:	8b b9       	out	0x0b, r24	; 11
  d4:	08 95       	ret

000000d6 <putch_Str>:
}

void putch_Str(char *str){
  d6:	0f 93       	push	r16
  d8:	1f 93       	push	r17
  da:	cf 93       	push	r28
  dc:	8c 01       	movw	r16, r24
	
	unsigned char i = 0;
  de:	c0 e0       	ldi	r28, 0x00	; 0
	while(str[i]!='\0')
  e0:	02 c0       	rjmp	.+4      	; 0xe6 <putch_Str+0x10>
	putch(str[i++]);
  e2:	cf 5f       	subi	r28, 0xFF	; 255
  e4:	f1 df       	rcall	.-30     	; 0xc8 <putch>
}

void putch_Str(char *str){
	
	unsigned char i = 0;
	while(str[i]!='\0')
  e6:	f8 01       	movw	r30, r16
  e8:	ec 0f       	add	r30, r28
  ea:	f1 1d       	adc	r31, r1
  ec:	80 81       	ld	r24, Z
  ee:	81 11       	cpse	r24, r1
  f0:	f8 cf       	rjmp	.-16     	; 0xe2 <putch_Str+0xc>
	putch(str[i++]);
	
}
  f2:	cf 91       	pop	r28
  f4:	1f 91       	pop	r17
  f6:	0f 91       	pop	r16
  f8:	08 95       	ret

000000fa <getch>:

unsigned char getch(){
	
	unsigned char data;
	while((UCSR0A & 0x80) == 0); // 데이터를 받을 때까지 대기
  fa:	5f 9b       	sbis	0x0b, 7	; 11
  fc:	fe cf       	rjmp	.-4      	; 0xfa <getch>
	data = UDR0;				 // 수신된 데이터는 UDR0에 저장
  fe:	8c b1       	in	r24, 0x0c	; 12
	UCSR0A |= 0x80;
 100:	9b b1       	in	r25, 0x0b	; 11
 102:	90 68       	ori	r25, 0x80	; 128
 104:	9b b9       	out	0x0b, r25	; 11
	return data;				 // 읽어온 문자를 반환
}
 106:	08 95       	ret

00000108 <main>:

int main(){
 108:	cf 93       	push	r28
 10a:	df 93       	push	r29
 10c:	cd b7       	in	r28, 0x3d	; 61
 10e:	de b7       	in	r29, 0x3e	; 62
 110:	64 97       	sbiw	r28, 0x14	; 20
 112:	0f b6       	in	r0, 0x3f	; 63
 114:	f8 94       	cli
 116:	de bf       	out	0x3e, r29	; 62
 118:	0f be       	out	0x3f, r0	; 63
 11a:	cd bf       	out	0x3d, r28	; 61
	
	unsigned char RX_data = 0;
	unsigned char TX_data[20];
	
	DDRE = 0x0e;
 11c:	8e e0       	ldi	r24, 0x0E	; 14
 11e:	82 b9       	out	0x02, r24	; 2
	DDRA = 0xff;
 120:	8f ef       	ldi	r24, 0xFF	; 255
 122:	8a bb       	out	0x1a, r24	; 26
	
	UCSR0A = 0x00;
 124:	1b b8       	out	0x0b, r1	; 11
	UCSR0B = 0x18;  // Rx, Tx
 126:	88 e1       	ldi	r24, 0x18	; 24
 128:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = 0x06;
 12a:	86 e0       	ldi	r24, 0x06	; 6
 12c:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
	UBRR0H = 0x00;
 130:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 3;
 134:	83 e0       	ldi	r24, 0x03	; 3
 136:	89 b9       	out	0x09, r24	; 9
	
	while (1){
		
		RX_data = getch();
 138:	e0 df       	rcall	.-64     	; 0xfa <getch>
 13a:	f8 2e       	mov	r15, r24
		
		if((RX_data >= 0x31) && (RX_data <= 0x39)){
 13c:	8f ec       	ldi	r24, 0xCF	; 207
 13e:	8f 0d       	add	r24, r15
 140:	89 30       	cpi	r24, 0x09	; 9
 142:	d0 f7       	brcc	.-12     	; 0x138 <main+0x30>
			
			putch_Str("\r\n");	
 144:	8b e1       	ldi	r24, 0x1B	; 27
 146:	91 e0       	ldi	r25, 0x01	; 1
 148:	c6 df       	rcall	.-116    	; 0xd6 <putch_Str>
			putch_Str(" < Gugudan ");
 14a:	80 e0       	ldi	r24, 0x00	; 0
 14c:	91 e0       	ldi	r25, 0x01	; 1
			putch(RX_data);
 14e:	c3 df       	rcall	.-122    	; 0xd6 <putch_Str>
 150:	8f 2d       	mov	r24, r15
			putch_Str("dan Print !! > \r\n");
 152:	ba df       	rcall	.-140    	; 0xc8 <putch>
 154:	8c e0       	ldi	r24, 0x0C	; 12
 156:	91 e0       	ldi	r25, 0x01	; 1
 158:	be df       	rcall	.-132    	; 0xd6 <putch_Str>
			
			for(int i = 2 ; i < 10 ; i++)
 15a:	02 e0       	ldi	r16, 0x02	; 2
 15c:	10 e0       	ldi	r17, 0x00	; 0
 15e:	26 c0       	rjmp	.+76     	; 0x1ac <main+0xa4>
			{
				int INT_data = RX_data - 0x30;
 160:	8f 2d       	mov	r24, r15
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	c0 97       	sbiw	r24, 0x30	; 48
				sprintf(TX_data, "     %d * %d = %d", INT_data, i, INT_data*i);
 166:	08 9f       	mul	r16, r24
 168:	90 01       	movw	r18, r0
 16a:	09 9f       	mul	r16, r25
 16c:	30 0d       	add	r19, r0
 16e:	18 9f       	mul	r17, r24
 170:	30 0d       	add	r19, r0
 172:	11 24       	eor	r1, r1
 174:	3f 93       	push	r19
 176:	2f 93       	push	r18
 178:	1f 93       	push	r17
 17a:	0f 93       	push	r16
 17c:	9f 93       	push	r25
 17e:	8f 93       	push	r24
 180:	8e e1       	ldi	r24, 0x1E	; 30
 182:	91 e0       	ldi	r25, 0x01	; 1
 184:	9f 93       	push	r25
 186:	8f 93       	push	r24
 188:	ce 01       	movw	r24, r28
 18a:	01 96       	adiw	r24, 0x01	; 1
 18c:	6c 01       	movw	r12, r24
 18e:	9f 93       	push	r25
 190:	8f 93       	push	r24
				putch_Str("\r\n");
 192:	13 d0       	rcall	.+38     	; 0x1ba <sprintf>
 194:	8b e1       	ldi	r24, 0x1B	; 27
 196:	91 e0       	ldi	r25, 0x01	; 1
 198:	9e df       	rcall	.-196    	; 0xd6 <putch_Str>
				putch_Str(TX_data);
 19a:	c6 01       	movw	r24, r12
 19c:	9c df       	rcall	.-200    	; 0xd6 <putch_Str>
 19e:	0f 5f       	subi	r16, 0xFF	; 255
			putch_Str("\r\n");	
			putch_Str(" < Gugudan ");
			putch(RX_data);
			putch_Str("dan Print !! > \r\n");
			
			for(int i = 2 ; i < 10 ; i++)
 1a0:	1f 4f       	sbci	r17, 0xFF	; 255
 1a2:	0f b6       	in	r0, 0x3f	; 63
 1a4:	f8 94       	cli
 1a6:	de bf       	out	0x3e, r29	; 62
 1a8:	0f be       	out	0x3f, r0	; 63
 1aa:	cd bf       	out	0x3d, r28	; 61
 1ac:	0a 30       	cpi	r16, 0x0A	; 10
 1ae:	11 05       	cpc	r17, r1
 1b0:	bc f2       	brlt	.-82     	; 0x160 <main+0x58>
				sprintf(TX_data, "     %d * %d = %d", INT_data, i, INT_data*i);
				putch_Str("\r\n");
				putch_Str(TX_data);
			}
			
			putch_Str("\r\n");
 1b2:	8b e1       	ldi	r24, 0x1B	; 27
 1b4:	91 e0       	ldi	r25, 0x01	; 1
 1b6:	8f df       	rcall	.-226    	; 0xd6 <putch_Str>
 1b8:	bf cf       	rjmp	.-130    	; 0x138 <main+0x30>

000001ba <sprintf>:
 1ba:	0f 93       	push	r16
 1bc:	1f 93       	push	r17
 1be:	cf 93       	push	r28
 1c0:	df 93       	push	r29
 1c2:	cd b7       	in	r28, 0x3d	; 61
 1c4:	de b7       	in	r29, 0x3e	; 62
 1c6:	2e 97       	sbiw	r28, 0x0e	; 14
 1c8:	0f b6       	in	r0, 0x3f	; 63
 1ca:	f8 94       	cli
 1cc:	de bf       	out	0x3e, r29	; 62
 1ce:	0f be       	out	0x3f, r0	; 63
 1d0:	cd bf       	out	0x3d, r28	; 61
 1d2:	0d 89       	ldd	r16, Y+21	; 0x15
 1d4:	1e 89       	ldd	r17, Y+22	; 0x16
 1d6:	86 e0       	ldi	r24, 0x06	; 6
 1d8:	8c 83       	std	Y+4, r24	; 0x04
 1da:	1a 83       	std	Y+2, r17	; 0x02
 1dc:	09 83       	std	Y+1, r16	; 0x01
 1de:	8f ef       	ldi	r24, 0xFF	; 255
 1e0:	9f e7       	ldi	r25, 0x7F	; 127
 1e2:	9e 83       	std	Y+6, r25	; 0x06
 1e4:	8d 83       	std	Y+5, r24	; 0x05
 1e6:	ae 01       	movw	r20, r28
 1e8:	47 5e       	subi	r20, 0xE7	; 231
 1ea:	5f 4f       	sbci	r21, 0xFF	; 255
 1ec:	6f 89       	ldd	r22, Y+23	; 0x17
 1ee:	78 8d       	ldd	r23, Y+24	; 0x18
 1f0:	ce 01       	movw	r24, r28
 1f2:	01 96       	adiw	r24, 0x01	; 1
 1f4:	10 d0       	rcall	.+32     	; 0x216 <vfprintf>
 1f6:	ef 81       	ldd	r30, Y+7	; 0x07
 1f8:	f8 85       	ldd	r31, Y+8	; 0x08
 1fa:	e0 0f       	add	r30, r16
 1fc:	f1 1f       	adc	r31, r17
 1fe:	10 82       	st	Z, r1
 200:	2e 96       	adiw	r28, 0x0e	; 14
 202:	0f b6       	in	r0, 0x3f	; 63
 204:	f8 94       	cli
 206:	de bf       	out	0x3e, r29	; 62
 208:	0f be       	out	0x3f, r0	; 63
 20a:	cd bf       	out	0x3d, r28	; 61
 20c:	df 91       	pop	r29
 20e:	cf 91       	pop	r28
 210:	1f 91       	pop	r17
 212:	0f 91       	pop	r16
 214:	08 95       	ret

00000216 <vfprintf>:
 216:	2f 92       	push	r2
 218:	3f 92       	push	r3
 21a:	4f 92       	push	r4
 21c:	5f 92       	push	r5
 21e:	6f 92       	push	r6
 220:	7f 92       	push	r7
 222:	8f 92       	push	r8
 224:	9f 92       	push	r9
 226:	af 92       	push	r10
 228:	bf 92       	push	r11
 22a:	cf 92       	push	r12
 22c:	df 92       	push	r13
 22e:	ef 92       	push	r14
 230:	ff 92       	push	r15
 232:	0f 93       	push	r16
 234:	1f 93       	push	r17
 236:	cf 93       	push	r28
 238:	df 93       	push	r29
 23a:	cd b7       	in	r28, 0x3d	; 61
 23c:	de b7       	in	r29, 0x3e	; 62
 23e:	2b 97       	sbiw	r28, 0x0b	; 11
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	f8 94       	cli
 244:	de bf       	out	0x3e, r29	; 62
 246:	0f be       	out	0x3f, r0	; 63
 248:	cd bf       	out	0x3d, r28	; 61
 24a:	6c 01       	movw	r12, r24
 24c:	7b 01       	movw	r14, r22
 24e:	8a 01       	movw	r16, r20
 250:	fc 01       	movw	r30, r24
 252:	17 82       	std	Z+7, r1	; 0x07
 254:	16 82       	std	Z+6, r1	; 0x06
 256:	83 81       	ldd	r24, Z+3	; 0x03
 258:	81 ff       	sbrs	r24, 1
 25a:	bf c1       	rjmp	.+894    	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 25c:	ce 01       	movw	r24, r28
 25e:	01 96       	adiw	r24, 0x01	; 1
 260:	3c 01       	movw	r6, r24
 262:	f6 01       	movw	r30, r12
 264:	93 81       	ldd	r25, Z+3	; 0x03
 266:	f7 01       	movw	r30, r14
 268:	93 fd       	sbrc	r25, 3
 26a:	85 91       	lpm	r24, Z+
 26c:	93 ff       	sbrs	r25, 3
 26e:	81 91       	ld	r24, Z+
 270:	7f 01       	movw	r14, r30
 272:	88 23       	and	r24, r24
 274:	09 f4       	brne	.+2      	; 0x278 <vfprintf+0x62>
 276:	ad c1       	rjmp	.+858    	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 278:	85 32       	cpi	r24, 0x25	; 37
 27a:	39 f4       	brne	.+14     	; 0x28a <vfprintf+0x74>
 27c:	93 fd       	sbrc	r25, 3
 27e:	85 91       	lpm	r24, Z+
 280:	93 ff       	sbrs	r25, 3
 282:	81 91       	ld	r24, Z+
 284:	7f 01       	movw	r14, r30
 286:	85 32       	cpi	r24, 0x25	; 37
 288:	21 f4       	brne	.+8      	; 0x292 <vfprintf+0x7c>
 28a:	b6 01       	movw	r22, r12
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	d6 d1       	rcall	.+940    	; 0x63c <fputc>
 290:	e8 cf       	rjmp	.-48     	; 0x262 <vfprintf+0x4c>
 292:	91 2c       	mov	r9, r1
 294:	21 2c       	mov	r2, r1
 296:	31 2c       	mov	r3, r1
 298:	ff e1       	ldi	r31, 0x1F	; 31
 29a:	f3 15       	cp	r31, r3
 29c:	d8 f0       	brcs	.+54     	; 0x2d4 <vfprintf+0xbe>
 29e:	8b 32       	cpi	r24, 0x2B	; 43
 2a0:	79 f0       	breq	.+30     	; 0x2c0 <vfprintf+0xaa>
 2a2:	38 f4       	brcc	.+14     	; 0x2b2 <vfprintf+0x9c>
 2a4:	80 32       	cpi	r24, 0x20	; 32
 2a6:	79 f0       	breq	.+30     	; 0x2c6 <vfprintf+0xb0>
 2a8:	83 32       	cpi	r24, 0x23	; 35
 2aa:	a1 f4       	brne	.+40     	; 0x2d4 <vfprintf+0xbe>
 2ac:	23 2d       	mov	r18, r3
 2ae:	20 61       	ori	r18, 0x10	; 16
 2b0:	1d c0       	rjmp	.+58     	; 0x2ec <vfprintf+0xd6>
 2b2:	8d 32       	cpi	r24, 0x2D	; 45
 2b4:	61 f0       	breq	.+24     	; 0x2ce <vfprintf+0xb8>
 2b6:	80 33       	cpi	r24, 0x30	; 48
 2b8:	69 f4       	brne	.+26     	; 0x2d4 <vfprintf+0xbe>
 2ba:	23 2d       	mov	r18, r3
 2bc:	21 60       	ori	r18, 0x01	; 1
 2be:	16 c0       	rjmp	.+44     	; 0x2ec <vfprintf+0xd6>
 2c0:	83 2d       	mov	r24, r3
 2c2:	82 60       	ori	r24, 0x02	; 2
 2c4:	38 2e       	mov	r3, r24
 2c6:	e3 2d       	mov	r30, r3
 2c8:	e4 60       	ori	r30, 0x04	; 4
 2ca:	3e 2e       	mov	r3, r30
 2cc:	2a c0       	rjmp	.+84     	; 0x322 <vfprintf+0x10c>
 2ce:	f3 2d       	mov	r31, r3
 2d0:	f8 60       	ori	r31, 0x08	; 8
 2d2:	1d c0       	rjmp	.+58     	; 0x30e <vfprintf+0xf8>
 2d4:	37 fc       	sbrc	r3, 7
 2d6:	2d c0       	rjmp	.+90     	; 0x332 <vfprintf+0x11c>
 2d8:	20 ed       	ldi	r18, 0xD0	; 208
 2da:	28 0f       	add	r18, r24
 2dc:	2a 30       	cpi	r18, 0x0A	; 10
 2de:	40 f0       	brcs	.+16     	; 0x2f0 <vfprintf+0xda>
 2e0:	8e 32       	cpi	r24, 0x2E	; 46
 2e2:	b9 f4       	brne	.+46     	; 0x312 <vfprintf+0xfc>
 2e4:	36 fc       	sbrc	r3, 6
 2e6:	75 c1       	rjmp	.+746    	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 2e8:	23 2d       	mov	r18, r3
 2ea:	20 64       	ori	r18, 0x40	; 64
 2ec:	32 2e       	mov	r3, r18
 2ee:	19 c0       	rjmp	.+50     	; 0x322 <vfprintf+0x10c>
 2f0:	36 fe       	sbrs	r3, 6
 2f2:	06 c0       	rjmp	.+12     	; 0x300 <vfprintf+0xea>
 2f4:	8a e0       	ldi	r24, 0x0A	; 10
 2f6:	98 9e       	mul	r9, r24
 2f8:	20 0d       	add	r18, r0
 2fa:	11 24       	eor	r1, r1
 2fc:	92 2e       	mov	r9, r18
 2fe:	11 c0       	rjmp	.+34     	; 0x322 <vfprintf+0x10c>
 300:	ea e0       	ldi	r30, 0x0A	; 10
 302:	2e 9e       	mul	r2, r30
 304:	20 0d       	add	r18, r0
 306:	11 24       	eor	r1, r1
 308:	22 2e       	mov	r2, r18
 30a:	f3 2d       	mov	r31, r3
 30c:	f0 62       	ori	r31, 0x20	; 32
 30e:	3f 2e       	mov	r3, r31
 310:	08 c0       	rjmp	.+16     	; 0x322 <vfprintf+0x10c>
 312:	8c 36       	cpi	r24, 0x6C	; 108
 314:	21 f4       	brne	.+8      	; 0x31e <vfprintf+0x108>
 316:	83 2d       	mov	r24, r3
 318:	80 68       	ori	r24, 0x80	; 128
 31a:	38 2e       	mov	r3, r24
 31c:	02 c0       	rjmp	.+4      	; 0x322 <vfprintf+0x10c>
 31e:	88 36       	cpi	r24, 0x68	; 104
 320:	41 f4       	brne	.+16     	; 0x332 <vfprintf+0x11c>
 322:	f7 01       	movw	r30, r14
 324:	93 fd       	sbrc	r25, 3
 326:	85 91       	lpm	r24, Z+
 328:	93 ff       	sbrs	r25, 3
 32a:	81 91       	ld	r24, Z+
 32c:	7f 01       	movw	r14, r30
 32e:	81 11       	cpse	r24, r1
 330:	b3 cf       	rjmp	.-154    	; 0x298 <vfprintf+0x82>
 332:	98 2f       	mov	r25, r24
 334:	9f 7d       	andi	r25, 0xDF	; 223
 336:	95 54       	subi	r25, 0x45	; 69
 338:	93 30       	cpi	r25, 0x03	; 3
 33a:	28 f4       	brcc	.+10     	; 0x346 <vfprintf+0x130>
 33c:	0c 5f       	subi	r16, 0xFC	; 252
 33e:	1f 4f       	sbci	r17, 0xFF	; 255
 340:	9f e3       	ldi	r25, 0x3F	; 63
 342:	99 83       	std	Y+1, r25	; 0x01
 344:	0d c0       	rjmp	.+26     	; 0x360 <vfprintf+0x14a>
 346:	83 36       	cpi	r24, 0x63	; 99
 348:	31 f0       	breq	.+12     	; 0x356 <vfprintf+0x140>
 34a:	83 37       	cpi	r24, 0x73	; 115
 34c:	71 f0       	breq	.+28     	; 0x36a <vfprintf+0x154>
 34e:	83 35       	cpi	r24, 0x53	; 83
 350:	09 f0       	breq	.+2      	; 0x354 <vfprintf+0x13e>
 352:	55 c0       	rjmp	.+170    	; 0x3fe <vfprintf+0x1e8>
 354:	20 c0       	rjmp	.+64     	; 0x396 <vfprintf+0x180>
 356:	f8 01       	movw	r30, r16
 358:	80 81       	ld	r24, Z
 35a:	89 83       	std	Y+1, r24	; 0x01
 35c:	0e 5f       	subi	r16, 0xFE	; 254
 35e:	1f 4f       	sbci	r17, 0xFF	; 255
 360:	88 24       	eor	r8, r8
 362:	83 94       	inc	r8
 364:	91 2c       	mov	r9, r1
 366:	53 01       	movw	r10, r6
 368:	12 c0       	rjmp	.+36     	; 0x38e <vfprintf+0x178>
 36a:	28 01       	movw	r4, r16
 36c:	f2 e0       	ldi	r31, 0x02	; 2
 36e:	4f 0e       	add	r4, r31
 370:	51 1c       	adc	r5, r1
 372:	f8 01       	movw	r30, r16
 374:	a0 80       	ld	r10, Z
 376:	b1 80       	ldd	r11, Z+1	; 0x01
 378:	36 fe       	sbrs	r3, 6
 37a:	03 c0       	rjmp	.+6      	; 0x382 <vfprintf+0x16c>
 37c:	69 2d       	mov	r22, r9
 37e:	70 e0       	ldi	r23, 0x00	; 0
 380:	02 c0       	rjmp	.+4      	; 0x386 <vfprintf+0x170>
 382:	6f ef       	ldi	r22, 0xFF	; 255
 384:	7f ef       	ldi	r23, 0xFF	; 255
 386:	c5 01       	movw	r24, r10
 388:	4e d1       	rcall	.+668    	; 0x626 <strnlen>
 38a:	4c 01       	movw	r8, r24
 38c:	82 01       	movw	r16, r4
 38e:	f3 2d       	mov	r31, r3
 390:	ff 77       	andi	r31, 0x7F	; 127
 392:	3f 2e       	mov	r3, r31
 394:	15 c0       	rjmp	.+42     	; 0x3c0 <vfprintf+0x1aa>
 396:	28 01       	movw	r4, r16
 398:	22 e0       	ldi	r18, 0x02	; 2
 39a:	42 0e       	add	r4, r18
 39c:	51 1c       	adc	r5, r1
 39e:	f8 01       	movw	r30, r16
 3a0:	a0 80       	ld	r10, Z
 3a2:	b1 80       	ldd	r11, Z+1	; 0x01
 3a4:	36 fe       	sbrs	r3, 6
 3a6:	03 c0       	rjmp	.+6      	; 0x3ae <vfprintf+0x198>
 3a8:	69 2d       	mov	r22, r9
 3aa:	70 e0       	ldi	r23, 0x00	; 0
 3ac:	02 c0       	rjmp	.+4      	; 0x3b2 <vfprintf+0x19c>
 3ae:	6f ef       	ldi	r22, 0xFF	; 255
 3b0:	7f ef       	ldi	r23, 0xFF	; 255
 3b2:	c5 01       	movw	r24, r10
 3b4:	2d d1       	rcall	.+602    	; 0x610 <strnlen_P>
 3b6:	4c 01       	movw	r8, r24
 3b8:	f3 2d       	mov	r31, r3
 3ba:	f0 68       	ori	r31, 0x80	; 128
 3bc:	3f 2e       	mov	r3, r31
 3be:	82 01       	movw	r16, r4
 3c0:	33 fc       	sbrc	r3, 3
 3c2:	19 c0       	rjmp	.+50     	; 0x3f6 <vfprintf+0x1e0>
 3c4:	82 2d       	mov	r24, r2
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	88 16       	cp	r8, r24
 3ca:	99 06       	cpc	r9, r25
 3cc:	a0 f4       	brcc	.+40     	; 0x3f6 <vfprintf+0x1e0>
 3ce:	b6 01       	movw	r22, r12
 3d0:	80 e2       	ldi	r24, 0x20	; 32
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	33 d1       	rcall	.+614    	; 0x63c <fputc>
 3d6:	2a 94       	dec	r2
 3d8:	f5 cf       	rjmp	.-22     	; 0x3c4 <vfprintf+0x1ae>
 3da:	f5 01       	movw	r30, r10
 3dc:	37 fc       	sbrc	r3, 7
 3de:	85 91       	lpm	r24, Z+
 3e0:	37 fe       	sbrs	r3, 7
 3e2:	81 91       	ld	r24, Z+
 3e4:	5f 01       	movw	r10, r30
 3e6:	b6 01       	movw	r22, r12
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	28 d1       	rcall	.+592    	; 0x63c <fputc>
 3ec:	21 10       	cpse	r2, r1
 3ee:	2a 94       	dec	r2
 3f0:	21 e0       	ldi	r18, 0x01	; 1
 3f2:	82 1a       	sub	r8, r18
 3f4:	91 08       	sbc	r9, r1
 3f6:	81 14       	cp	r8, r1
 3f8:	91 04       	cpc	r9, r1
 3fa:	79 f7       	brne	.-34     	; 0x3da <vfprintf+0x1c4>
 3fc:	e1 c0       	rjmp	.+450    	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 3fe:	84 36       	cpi	r24, 0x64	; 100
 400:	11 f0       	breq	.+4      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 402:	89 36       	cpi	r24, 0x69	; 105
 404:	39 f5       	brne	.+78     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 406:	f8 01       	movw	r30, r16
 408:	37 fe       	sbrs	r3, 7
 40a:	07 c0       	rjmp	.+14     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 40c:	60 81       	ld	r22, Z
 40e:	71 81       	ldd	r23, Z+1	; 0x01
 410:	82 81       	ldd	r24, Z+2	; 0x02
 412:	93 81       	ldd	r25, Z+3	; 0x03
 414:	0c 5f       	subi	r16, 0xFC	; 252
 416:	1f 4f       	sbci	r17, 0xFF	; 255
 418:	08 c0       	rjmp	.+16     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41a:	60 81       	ld	r22, Z
 41c:	71 81       	ldd	r23, Z+1	; 0x01
 41e:	07 2e       	mov	r0, r23
 420:	00 0c       	add	r0, r0
 422:	88 0b       	sbc	r24, r24
 424:	99 0b       	sbc	r25, r25
 426:	0e 5f       	subi	r16, 0xFE	; 254
 428:	1f 4f       	sbci	r17, 0xFF	; 255
 42a:	f3 2d       	mov	r31, r3
 42c:	ff 76       	andi	r31, 0x6F	; 111
 42e:	3f 2e       	mov	r3, r31
 430:	97 ff       	sbrs	r25, 7
 432:	09 c0       	rjmp	.+18     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 434:	90 95       	com	r25
 436:	80 95       	com	r24
 438:	70 95       	com	r23
 43a:	61 95       	neg	r22
 43c:	7f 4f       	sbci	r23, 0xFF	; 255
 43e:	8f 4f       	sbci	r24, 0xFF	; 255
 440:	9f 4f       	sbci	r25, 0xFF	; 255
 442:	f0 68       	ori	r31, 0x80	; 128
 444:	3f 2e       	mov	r3, r31
 446:	2a e0       	ldi	r18, 0x0A	; 10
 448:	30 e0       	ldi	r19, 0x00	; 0
 44a:	a3 01       	movw	r20, r6
 44c:	33 d1       	rcall	.+614    	; 0x6b4 <__ultoa_invert>
 44e:	88 2e       	mov	r8, r24
 450:	86 18       	sub	r8, r6
 452:	44 c0       	rjmp	.+136    	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 454:	85 37       	cpi	r24, 0x75	; 117
 456:	31 f4       	brne	.+12     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 458:	23 2d       	mov	r18, r3
 45a:	2f 7e       	andi	r18, 0xEF	; 239
 45c:	b2 2e       	mov	r11, r18
 45e:	2a e0       	ldi	r18, 0x0A	; 10
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	25 c0       	rjmp	.+74     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 464:	93 2d       	mov	r25, r3
 466:	99 7f       	andi	r25, 0xF9	; 249
 468:	b9 2e       	mov	r11, r25
 46a:	8f 36       	cpi	r24, 0x6F	; 111
 46c:	c1 f0       	breq	.+48     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 46e:	18 f4       	brcc	.+6      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 470:	88 35       	cpi	r24, 0x58	; 88
 472:	79 f0       	breq	.+30     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 474:	ae c0       	rjmp	.+348    	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 476:	80 37       	cpi	r24, 0x70	; 112
 478:	19 f0       	breq	.+6      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 47a:	88 37       	cpi	r24, 0x78	; 120
 47c:	21 f0       	breq	.+8      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 47e:	a9 c0       	rjmp	.+338    	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 480:	e9 2f       	mov	r30, r25
 482:	e0 61       	ori	r30, 0x10	; 16
 484:	be 2e       	mov	r11, r30
 486:	b4 fe       	sbrs	r11, 4
 488:	0d c0       	rjmp	.+26     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 48a:	fb 2d       	mov	r31, r11
 48c:	f4 60       	ori	r31, 0x04	; 4
 48e:	bf 2e       	mov	r11, r31
 490:	09 c0       	rjmp	.+18     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 492:	34 fe       	sbrs	r3, 4
 494:	0a c0       	rjmp	.+20     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 496:	29 2f       	mov	r18, r25
 498:	26 60       	ori	r18, 0x06	; 6
 49a:	b2 2e       	mov	r11, r18
 49c:	06 c0       	rjmp	.+12     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 49e:	28 e0       	ldi	r18, 0x08	; 8
 4a0:	30 e0       	ldi	r19, 0x00	; 0
 4a2:	05 c0       	rjmp	.+10     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4a4:	20 e1       	ldi	r18, 0x10	; 16
 4a6:	30 e0       	ldi	r19, 0x00	; 0
 4a8:	02 c0       	rjmp	.+4      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4aa:	20 e1       	ldi	r18, 0x10	; 16
 4ac:	32 e0       	ldi	r19, 0x02	; 2
 4ae:	f8 01       	movw	r30, r16
 4b0:	b7 fe       	sbrs	r11, 7
 4b2:	07 c0       	rjmp	.+14     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 4b4:	60 81       	ld	r22, Z
 4b6:	71 81       	ldd	r23, Z+1	; 0x01
 4b8:	82 81       	ldd	r24, Z+2	; 0x02
 4ba:	93 81       	ldd	r25, Z+3	; 0x03
 4bc:	0c 5f       	subi	r16, 0xFC	; 252
 4be:	1f 4f       	sbci	r17, 0xFF	; 255
 4c0:	06 c0       	rjmp	.+12     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4c2:	60 81       	ld	r22, Z
 4c4:	71 81       	ldd	r23, Z+1	; 0x01
 4c6:	80 e0       	ldi	r24, 0x00	; 0
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	0e 5f       	subi	r16, 0xFE	; 254
 4cc:	1f 4f       	sbci	r17, 0xFF	; 255
 4ce:	a3 01       	movw	r20, r6
 4d0:	f1 d0       	rcall	.+482    	; 0x6b4 <__ultoa_invert>
 4d2:	88 2e       	mov	r8, r24
 4d4:	86 18       	sub	r8, r6
 4d6:	fb 2d       	mov	r31, r11
 4d8:	ff 77       	andi	r31, 0x7F	; 127
 4da:	3f 2e       	mov	r3, r31
 4dc:	36 fe       	sbrs	r3, 6
 4de:	0d c0       	rjmp	.+26     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4e0:	23 2d       	mov	r18, r3
 4e2:	2e 7f       	andi	r18, 0xFE	; 254
 4e4:	a2 2e       	mov	r10, r18
 4e6:	89 14       	cp	r8, r9
 4e8:	58 f4       	brcc	.+22     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4ea:	34 fe       	sbrs	r3, 4
 4ec:	0b c0       	rjmp	.+22     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4ee:	32 fc       	sbrc	r3, 2
 4f0:	09 c0       	rjmp	.+18     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4f2:	83 2d       	mov	r24, r3
 4f4:	8e 7e       	andi	r24, 0xEE	; 238
 4f6:	a8 2e       	mov	r10, r24
 4f8:	05 c0       	rjmp	.+10     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4fa:	b8 2c       	mov	r11, r8
 4fc:	a3 2c       	mov	r10, r3
 4fe:	03 c0       	rjmp	.+6      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 500:	b8 2c       	mov	r11, r8
 502:	01 c0       	rjmp	.+2      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 504:	b9 2c       	mov	r11, r9
 506:	a4 fe       	sbrs	r10, 4
 508:	0f c0       	rjmp	.+30     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 50a:	fe 01       	movw	r30, r28
 50c:	e8 0d       	add	r30, r8
 50e:	f1 1d       	adc	r31, r1
 510:	80 81       	ld	r24, Z
 512:	80 33       	cpi	r24, 0x30	; 48
 514:	21 f4       	brne	.+8      	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 516:	9a 2d       	mov	r25, r10
 518:	99 7e       	andi	r25, 0xE9	; 233
 51a:	a9 2e       	mov	r10, r25
 51c:	09 c0       	rjmp	.+18     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 51e:	a2 fe       	sbrs	r10, 2
 520:	06 c0       	rjmp	.+12     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 522:	b3 94       	inc	r11
 524:	b3 94       	inc	r11
 526:	04 c0       	rjmp	.+8      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 528:	8a 2d       	mov	r24, r10
 52a:	86 78       	andi	r24, 0x86	; 134
 52c:	09 f0       	breq	.+2      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 52e:	b3 94       	inc	r11
 530:	a3 fc       	sbrc	r10, 3
 532:	10 c0       	rjmp	.+32     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 534:	a0 fe       	sbrs	r10, 0
 536:	06 c0       	rjmp	.+12     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 538:	b2 14       	cp	r11, r2
 53a:	80 f4       	brcc	.+32     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 53c:	28 0c       	add	r2, r8
 53e:	92 2c       	mov	r9, r2
 540:	9b 18       	sub	r9, r11
 542:	0d c0       	rjmp	.+26     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 544:	b2 14       	cp	r11, r2
 546:	58 f4       	brcc	.+22     	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 548:	b6 01       	movw	r22, r12
 54a:	80 e2       	ldi	r24, 0x20	; 32
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	76 d0       	rcall	.+236    	; 0x63c <fputc>
 550:	b3 94       	inc	r11
 552:	f8 cf       	rjmp	.-16     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 554:	b2 14       	cp	r11, r2
 556:	18 f4       	brcc	.+6      	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 558:	2b 18       	sub	r2, r11
 55a:	02 c0       	rjmp	.+4      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 55c:	98 2c       	mov	r9, r8
 55e:	21 2c       	mov	r2, r1
 560:	a4 fe       	sbrs	r10, 4
 562:	0f c0       	rjmp	.+30     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 564:	b6 01       	movw	r22, r12
 566:	80 e3       	ldi	r24, 0x30	; 48
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	68 d0       	rcall	.+208    	; 0x63c <fputc>
 56c:	a2 fe       	sbrs	r10, 2
 56e:	16 c0       	rjmp	.+44     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 570:	a1 fc       	sbrc	r10, 1
 572:	03 c0       	rjmp	.+6      	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 574:	88 e7       	ldi	r24, 0x78	; 120
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	02 c0       	rjmp	.+4      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 57a:	88 e5       	ldi	r24, 0x58	; 88
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	b6 01       	movw	r22, r12
 580:	0c c0       	rjmp	.+24     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 582:	8a 2d       	mov	r24, r10
 584:	86 78       	andi	r24, 0x86	; 134
 586:	51 f0       	breq	.+20     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 588:	a1 fe       	sbrs	r10, 1
 58a:	02 c0       	rjmp	.+4      	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 58c:	8b e2       	ldi	r24, 0x2B	; 43
 58e:	01 c0       	rjmp	.+2      	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 590:	80 e2       	ldi	r24, 0x20	; 32
 592:	a7 fc       	sbrc	r10, 7
 594:	8d e2       	ldi	r24, 0x2D	; 45
 596:	b6 01       	movw	r22, r12
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	50 d0       	rcall	.+160    	; 0x63c <fputc>
 59c:	89 14       	cp	r8, r9
 59e:	30 f4       	brcc	.+12     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5a0:	b6 01       	movw	r22, r12
 5a2:	80 e3       	ldi	r24, 0x30	; 48
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	4a d0       	rcall	.+148    	; 0x63c <fputc>
 5a8:	9a 94       	dec	r9
 5aa:	f8 cf       	rjmp	.-16     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 5ac:	8a 94       	dec	r8
 5ae:	f3 01       	movw	r30, r6
 5b0:	e8 0d       	add	r30, r8
 5b2:	f1 1d       	adc	r31, r1
 5b4:	80 81       	ld	r24, Z
 5b6:	b6 01       	movw	r22, r12
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	40 d0       	rcall	.+128    	; 0x63c <fputc>
 5bc:	81 10       	cpse	r8, r1
 5be:	f6 cf       	rjmp	.-20     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 5c0:	22 20       	and	r2, r2
 5c2:	09 f4       	brne	.+2      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5c4:	4e ce       	rjmp	.-868    	; 0x262 <vfprintf+0x4c>
 5c6:	b6 01       	movw	r22, r12
 5c8:	80 e2       	ldi	r24, 0x20	; 32
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	37 d0       	rcall	.+110    	; 0x63c <fputc>
 5ce:	2a 94       	dec	r2
 5d0:	f7 cf       	rjmp	.-18     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5d2:	f6 01       	movw	r30, r12
 5d4:	86 81       	ldd	r24, Z+6	; 0x06
 5d6:	97 81       	ldd	r25, Z+7	; 0x07
 5d8:	02 c0       	rjmp	.+4      	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5da:	8f ef       	ldi	r24, 0xFF	; 255
 5dc:	9f ef       	ldi	r25, 0xFF	; 255
 5de:	2b 96       	adiw	r28, 0x0b	; 11
 5e0:	0f b6       	in	r0, 0x3f	; 63
 5e2:	f8 94       	cli
 5e4:	de bf       	out	0x3e, r29	; 62
 5e6:	0f be       	out	0x3f, r0	; 63
 5e8:	cd bf       	out	0x3d, r28	; 61
 5ea:	df 91       	pop	r29
 5ec:	cf 91       	pop	r28
 5ee:	1f 91       	pop	r17
 5f0:	0f 91       	pop	r16
 5f2:	ff 90       	pop	r15
 5f4:	ef 90       	pop	r14
 5f6:	df 90       	pop	r13
 5f8:	cf 90       	pop	r12
 5fa:	bf 90       	pop	r11
 5fc:	af 90       	pop	r10
 5fe:	9f 90       	pop	r9
 600:	8f 90       	pop	r8
 602:	7f 90       	pop	r7
 604:	6f 90       	pop	r6
 606:	5f 90       	pop	r5
 608:	4f 90       	pop	r4
 60a:	3f 90       	pop	r3
 60c:	2f 90       	pop	r2
 60e:	08 95       	ret

00000610 <strnlen_P>:
 610:	fc 01       	movw	r30, r24
 612:	05 90       	lpm	r0, Z+
 614:	61 50       	subi	r22, 0x01	; 1
 616:	70 40       	sbci	r23, 0x00	; 0
 618:	01 10       	cpse	r0, r1
 61a:	d8 f7       	brcc	.-10     	; 0x612 <strnlen_P+0x2>
 61c:	80 95       	com	r24
 61e:	90 95       	com	r25
 620:	8e 0f       	add	r24, r30
 622:	9f 1f       	adc	r25, r31
 624:	08 95       	ret

00000626 <strnlen>:
 626:	fc 01       	movw	r30, r24
 628:	61 50       	subi	r22, 0x01	; 1
 62a:	70 40       	sbci	r23, 0x00	; 0
 62c:	01 90       	ld	r0, Z+
 62e:	01 10       	cpse	r0, r1
 630:	d8 f7       	brcc	.-10     	; 0x628 <strnlen+0x2>
 632:	80 95       	com	r24
 634:	90 95       	com	r25
 636:	8e 0f       	add	r24, r30
 638:	9f 1f       	adc	r25, r31
 63a:	08 95       	ret

0000063c <fputc>:
 63c:	0f 93       	push	r16
 63e:	1f 93       	push	r17
 640:	cf 93       	push	r28
 642:	df 93       	push	r29
 644:	fb 01       	movw	r30, r22
 646:	23 81       	ldd	r18, Z+3	; 0x03
 648:	21 fd       	sbrc	r18, 1
 64a:	03 c0       	rjmp	.+6      	; 0x652 <fputc+0x16>
 64c:	8f ef       	ldi	r24, 0xFF	; 255
 64e:	9f ef       	ldi	r25, 0xFF	; 255
 650:	2c c0       	rjmp	.+88     	; 0x6aa <fputc+0x6e>
 652:	22 ff       	sbrs	r18, 2
 654:	16 c0       	rjmp	.+44     	; 0x682 <fputc+0x46>
 656:	46 81       	ldd	r20, Z+6	; 0x06
 658:	57 81       	ldd	r21, Z+7	; 0x07
 65a:	24 81       	ldd	r18, Z+4	; 0x04
 65c:	35 81       	ldd	r19, Z+5	; 0x05
 65e:	42 17       	cp	r20, r18
 660:	53 07       	cpc	r21, r19
 662:	44 f4       	brge	.+16     	; 0x674 <fputc+0x38>
 664:	a0 81       	ld	r26, Z
 666:	b1 81       	ldd	r27, Z+1	; 0x01
 668:	9d 01       	movw	r18, r26
 66a:	2f 5f       	subi	r18, 0xFF	; 255
 66c:	3f 4f       	sbci	r19, 0xFF	; 255
 66e:	31 83       	std	Z+1, r19	; 0x01
 670:	20 83       	st	Z, r18
 672:	8c 93       	st	X, r24
 674:	26 81       	ldd	r18, Z+6	; 0x06
 676:	37 81       	ldd	r19, Z+7	; 0x07
 678:	2f 5f       	subi	r18, 0xFF	; 255
 67a:	3f 4f       	sbci	r19, 0xFF	; 255
 67c:	37 83       	std	Z+7, r19	; 0x07
 67e:	26 83       	std	Z+6, r18	; 0x06
 680:	14 c0       	rjmp	.+40     	; 0x6aa <fputc+0x6e>
 682:	8b 01       	movw	r16, r22
 684:	ec 01       	movw	r28, r24
 686:	fb 01       	movw	r30, r22
 688:	00 84       	ldd	r0, Z+8	; 0x08
 68a:	f1 85       	ldd	r31, Z+9	; 0x09
 68c:	e0 2d       	mov	r30, r0
 68e:	09 95       	icall
 690:	89 2b       	or	r24, r25
 692:	e1 f6       	brne	.-72     	; 0x64c <fputc+0x10>
 694:	d8 01       	movw	r26, r16
 696:	16 96       	adiw	r26, 0x06	; 6
 698:	8d 91       	ld	r24, X+
 69a:	9c 91       	ld	r25, X
 69c:	17 97       	sbiw	r26, 0x07	; 7
 69e:	01 96       	adiw	r24, 0x01	; 1
 6a0:	17 96       	adiw	r26, 0x07	; 7
 6a2:	9c 93       	st	X, r25
 6a4:	8e 93       	st	-X, r24
 6a6:	16 97       	sbiw	r26, 0x06	; 6
 6a8:	ce 01       	movw	r24, r28
 6aa:	df 91       	pop	r29
 6ac:	cf 91       	pop	r28
 6ae:	1f 91       	pop	r17
 6b0:	0f 91       	pop	r16
 6b2:	08 95       	ret

000006b4 <__ultoa_invert>:
 6b4:	fa 01       	movw	r30, r20
 6b6:	aa 27       	eor	r26, r26
 6b8:	28 30       	cpi	r18, 0x08	; 8
 6ba:	51 f1       	breq	.+84     	; 0x710 <__ultoa_invert+0x5c>
 6bc:	20 31       	cpi	r18, 0x10	; 16
 6be:	81 f1       	breq	.+96     	; 0x720 <__ultoa_invert+0x6c>
 6c0:	e8 94       	clt
 6c2:	6f 93       	push	r22
 6c4:	6e 7f       	andi	r22, 0xFE	; 254
 6c6:	6e 5f       	subi	r22, 0xFE	; 254
 6c8:	7f 4f       	sbci	r23, 0xFF	; 255
 6ca:	8f 4f       	sbci	r24, 0xFF	; 255
 6cc:	9f 4f       	sbci	r25, 0xFF	; 255
 6ce:	af 4f       	sbci	r26, 0xFF	; 255
 6d0:	b1 e0       	ldi	r27, 0x01	; 1
 6d2:	3e d0       	rcall	.+124    	; 0x750 <__ultoa_invert+0x9c>
 6d4:	b4 e0       	ldi	r27, 0x04	; 4
 6d6:	3c d0       	rcall	.+120    	; 0x750 <__ultoa_invert+0x9c>
 6d8:	67 0f       	add	r22, r23
 6da:	78 1f       	adc	r23, r24
 6dc:	89 1f       	adc	r24, r25
 6de:	9a 1f       	adc	r25, r26
 6e0:	a1 1d       	adc	r26, r1
 6e2:	68 0f       	add	r22, r24
 6e4:	79 1f       	adc	r23, r25
 6e6:	8a 1f       	adc	r24, r26
 6e8:	91 1d       	adc	r25, r1
 6ea:	a1 1d       	adc	r26, r1
 6ec:	6a 0f       	add	r22, r26
 6ee:	71 1d       	adc	r23, r1
 6f0:	81 1d       	adc	r24, r1
 6f2:	91 1d       	adc	r25, r1
 6f4:	a1 1d       	adc	r26, r1
 6f6:	20 d0       	rcall	.+64     	; 0x738 <__ultoa_invert+0x84>
 6f8:	09 f4       	brne	.+2      	; 0x6fc <__ultoa_invert+0x48>
 6fa:	68 94       	set
 6fc:	3f 91       	pop	r19
 6fe:	2a e0       	ldi	r18, 0x0A	; 10
 700:	26 9f       	mul	r18, r22
 702:	11 24       	eor	r1, r1
 704:	30 19       	sub	r19, r0
 706:	30 5d       	subi	r19, 0xD0	; 208
 708:	31 93       	st	Z+, r19
 70a:	de f6       	brtc	.-74     	; 0x6c2 <__ultoa_invert+0xe>
 70c:	cf 01       	movw	r24, r30
 70e:	08 95       	ret
 710:	46 2f       	mov	r20, r22
 712:	47 70       	andi	r20, 0x07	; 7
 714:	40 5d       	subi	r20, 0xD0	; 208
 716:	41 93       	st	Z+, r20
 718:	b3 e0       	ldi	r27, 0x03	; 3
 71a:	0f d0       	rcall	.+30     	; 0x73a <__ultoa_invert+0x86>
 71c:	c9 f7       	brne	.-14     	; 0x710 <__ultoa_invert+0x5c>
 71e:	f6 cf       	rjmp	.-20     	; 0x70c <__ultoa_invert+0x58>
 720:	46 2f       	mov	r20, r22
 722:	4f 70       	andi	r20, 0x0F	; 15
 724:	40 5d       	subi	r20, 0xD0	; 208
 726:	4a 33       	cpi	r20, 0x3A	; 58
 728:	18 f0       	brcs	.+6      	; 0x730 <__ultoa_invert+0x7c>
 72a:	49 5d       	subi	r20, 0xD9	; 217
 72c:	31 fd       	sbrc	r19, 1
 72e:	40 52       	subi	r20, 0x20	; 32
 730:	41 93       	st	Z+, r20
 732:	02 d0       	rcall	.+4      	; 0x738 <__ultoa_invert+0x84>
 734:	a9 f7       	brne	.-22     	; 0x720 <__ultoa_invert+0x6c>
 736:	ea cf       	rjmp	.-44     	; 0x70c <__ultoa_invert+0x58>
 738:	b4 e0       	ldi	r27, 0x04	; 4
 73a:	a6 95       	lsr	r26
 73c:	97 95       	ror	r25
 73e:	87 95       	ror	r24
 740:	77 95       	ror	r23
 742:	67 95       	ror	r22
 744:	ba 95       	dec	r27
 746:	c9 f7       	brne	.-14     	; 0x73a <__ultoa_invert+0x86>
 748:	00 97       	sbiw	r24, 0x00	; 0
 74a:	61 05       	cpc	r22, r1
 74c:	71 05       	cpc	r23, r1
 74e:	08 95       	ret
 750:	9b 01       	movw	r18, r22
 752:	ac 01       	movw	r20, r24
 754:	0a 2e       	mov	r0, r26
 756:	06 94       	lsr	r0
 758:	57 95       	ror	r21
 75a:	47 95       	ror	r20
 75c:	37 95       	ror	r19
 75e:	27 95       	ror	r18
 760:	ba 95       	dec	r27
 762:	c9 f7       	brne	.-14     	; 0x756 <__ultoa_invert+0xa2>
 764:	62 0f       	add	r22, r18
 766:	73 1f       	adc	r23, r19
 768:	84 1f       	adc	r24, r20
 76a:	95 1f       	adc	r25, r21
 76c:	a0 1d       	adc	r26, r0
 76e:	08 95       	ret

00000770 <_exit>:
 770:	f8 94       	cli

00000772 <__stop_program>:
 772:	ff cf       	rjmp	.-2      	; 0x772 <__stop_program>
